
<%- include('header')  -%>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
 
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    
  </style>
</head>
<body>

 
  <div class="container-fluid">
    <div class="row">
      <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block  sidebar">
        <div class="position-sticky">
          <div style="margin-left: 50px; margin-top: 30px;">
            <a href="#" class="list-group-item list-group-item-action"><b>Manage My Account</b></a>
            <ul class="pl-4">
                <li><a href="/profile" class="list-group-item list-group-item-action" style="list-style: none;">Profile</a></li>
                <li><a href="/address" class="list-group-item list-group-item-action">Address Book</a></li>
                <li><a href="/changepassword" class="list-group-item list-group-item-action">Change Password</a></li>
                <li><a href="/wallet" class="list-group-item list-group-item-action">Wallet</a></li>
                <li><a href="/coupons" class="list-group-item list-group-item-action">Coupons</a></li>
              </ul>
              <a href="" class="list-group-item list-group-item-action"><b>Orders</b></a><br>
              <ul class="pl-4">
                <li><a href="/orders" class="list-group-item list-group-item-action" style="list-style: none;"> My Orders</a></li>
                <li><a href="/returns" class="list-group-item list-group-item-action">Returns</a></li>
                <li><a href="/cancellations" class="list-group-item list-group-item-action">Cancellations</a></li>
              </ul>
              <a href="/cart" class="list-group-item list-group-item-action"><b>Cart</a></b><br>
              <a href="/wishlist" class="list-group-item list-group-item-action"><b>Wishlist</a></b><br>
              <a href="/logout" class="list-group-item list-group-item-action"><b>Logout</a></b><br>
            </div>
        </div>
      </nav>
      <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                  
        <div class="container">
            <div class="row">
               
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body text-center">
                            <i class="fa fa-plus" id="addAddressIcon" aria-hidden="true" style="font-size: 110px;"></i><br>
                            <p class="card-link">Add Address</p>
                        </div>
                    </div>
                </div>
        
                <% if (addresses && addresses.length > 0) { %>
                    <% addresses.forEach(address => { %>
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6 class="card-title "><%= address.name %></h6>
                                    
                                    <h6 class="card-subtitle mb-2 "><%= address.street %></h6>
                                    <h6 class="card-subtitle mb-2 "><%= address.city %></h6>
                                    <h6 class="card-subtitle mb-2"><%= address.state %></h6>
                                    <h6 class="card-subtitle mb-2 "><%= address.pincode %></h6>
                                    
                           
                             
                                    <a href="#" class="card-link editAddressButton" data-bs-toggle="modal" data-bs-target="#editAddressModal" data-addressid="<%= address._id %>">Edit</a>


                              


                                    <a href="#" class="card-link removeButton" data-addressid="<%= address._id %>">Remove</a>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p class="col-md-12">No addresses found.</p>
                <% } %>
            </div>
        </div>


       <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Add Address Form -->
                <form id="addAddressForm">
                    <div class="mb-3">
                        <label for="newAddressName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="newAddressName" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="newAddressStreet" class="form-label">Street</label>
                        <input type="text" class="form-control" id="newAddressStreet" name="street" required>
                    </div>
                    <div class="mb-3">
                        <label for="newAddressCity" class="form-label">City</label>
                        <input type="text" class="form-control" id="newAddressCity" name="city" required>
                    </div>
                    <div class="mb-3">
                        <label for="newAddressState" class="form-label">State</label>
                        <input type="text" class="form-control" id="newAddressState" name="state" required>
                    </div>
                    <div class="mb-3">
                        <label for="newAddressPincode" class="form-label">Pincode</label>
                        <input type="text" class="form-control" id="newAddressPincode" name="pincode" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Address</button>
                </form>
                <!-- End Add Address Form -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>









<!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!-- Edit Address Form -->
          <form id="editAddressForm">
            <input type="hidden" id="addressId" name="addressId">
            <div class="mb-3">
              <label for="addressName" class="form-label">Name</label>
              <input type="text" class="form-control" id="addressName" name="name" required>
            </div>
            <div class="mb-3">
              <label for="addressStreet" class="form-label">Street</label>
              <input type="text" class="form-control" id="addressStreet" name="street" required>
            </div>
            <div class="mb-3">
              <label for="addressCity" class="form-label">City</label>
              <input type="text" class="form-control" id="addressCity" name="city" required>
            </div>
            <div class="mb-3">
              <label for="addressState" class="form-label">State</label>
              <input type="text" class="form-control" id="addressState" name="state" required>
            </div>
            <div class="mb-3">
              <label for="addressPincode" class="form-label">Pincode</label>
              <input type="text" class="form-control" id="addressPincode" name="pincode" required>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
          </form>
          <!-- End Edit Address Form -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  
  </main></body>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<!-- Existing script -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Get all elements with the class 'editAddressButton'
    var editButtons = document.querySelectorAll('.editAddressButton');

    // Add click event listener to each 'Edit' button
    editButtons.forEach(function (button) {
      button.addEventListener('click', function (event) {
        event.preventDefault();

        // Get the address ID from the 'data-addressid' attribute
        var addressId = button.getAttribute('data-addressid');

        // Make an AJAX request to fetch the address details based on addressId
        // Example using fetch API
        fetch('/getaddress/' + addressId)
          .then(response => response.json())
          .then(data => {
            console.log(data)

            document.getElementById('addressId').value = data._id;
            // Populate the modal form fields with the fetched address details
            document.getElementById('editAddressModalLabel').innerText = 'Edit Address';
            document.getElementById('addressName').value = data.name;
            document.getElementById('addressStreet').value = data.street;
            document.getElementById('addressCity').value = data.city;
            document.getElementById('addressState').value = data.state;
            document.getElementById('addressPincode').value = data.pincode;

            // Show the modal
            var editAddressModal = new bootstrap.Modal(document.getElementById('editAddressModal'));
            editAddressModal.show();
          })
          .catch(error => console.error('Error fetching address details:', error));
      });
    });

    // Handle the form submission for editing the address
    var editAddressForm = document.getElementById('editAddressForm');
    editAddressForm.addEventListener('submit', function (event) {
      event.preventDefault();

      // Retrieve the address details from the form
      var addressId = document.getElementById('addressId').value;
      console.log(addressId,)
      var updatedAddress = {
        name: document.getElementById('addressName').value,
        street: document.getElementById('addressStreet').value,
        city: document.getElementById('addressCity').value,
        state: document.getElementById('addressState').value,
        pincode: document.getElementById('addressPincode').value
      };

      // Make an AJAX request to update the address
      // Example using fetch API
      fetch('/updateaddress/' + addressId, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(updatedAddress),
      })
        .then(response => response.json())
        .then(data => {
          // Handle the response, e.g., close the modal
          var editAddressModal = new bootstrap.Modal(document.getElementById('editAddressModal'));
          editAddressModal.hide();
          // Optionally, you can update the displayed address on the page
        })
        .catch(error => console.error('Error updating address:', error));
    });

    // Move the following code outside of the 'DOMContentLoaded' event listener
    var addAddressIcon = document.getElementById('addAddressIcon');
    addAddressIcon.addEventListener('click', function () {
      var addAddressModal = new bootstrap.Modal(document.getElementById('addAddressModal'));
      addAddressModal.show();
    });

    // Handle the form submission for adding a new address
    var addAddressForm = document.getElementById('addAddressForm');
    addAddressForm.addEventListener('submit', function (event) {
      event.preventDefault();

      // Retrieve the new address details from the form
      var newAddress = {
        name: document.getElementById('newAddressName').value,
        street: document.getElementById('newAddressStreet').value,
        city: document.getElementById('newAddressCity').value,
        state: document.getElementById('newAddressState').value,
        pincode: document.getElementById('newAddressPincode').value
      };

      // Make an AJAX request to add the new address
      // Example using fetch API
      fetch('/addaddress', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(newAddress),
      })
        .then(response => response.json())
        .then(data => {
          // Handle the response, e.g., close the modal and update the displayed addresses on the page
          var addAddressModal = new bootstrap.Modal(document.getElementById('addAddressModal'));
          addAddressModal.hide();
          // Optionally, you can update the displayed addresses on the page
        })
        .catch(error => console.error('Error adding new address:', error));
    });


    var editAddressModal = new bootstrap.Modal(document.getElementById('editAddressModal'));
    editAddressModal.hide();

    var addAddressModal = new bootstrap.Modal(document.getElementById('addAddressModal'));
    addAddressModal.hide();
    $('.removeButton').on('click', function (event) {
        event.preventDefault(); 

       
        const addressId = $(this).data('addressid');

     
        $.ajax({
            type: 'DELETE', 
            url: `/removeAddress/${addressId}`, 
            success: function (data) {
              
                const removedCard = $(`.removeButton[data-addressid='${addressId}']`).closest('.card').parent();
                removedCard.remove();

                
                Swal.fire({
                    icon: 'success',
                    title: 'Address Removed!',
                    text: 'The address has been successfully removed.',
                });
            },
            error: function (error) {
                console.error('Error:', error);
              
            }
        });
    });
  });

</script>
